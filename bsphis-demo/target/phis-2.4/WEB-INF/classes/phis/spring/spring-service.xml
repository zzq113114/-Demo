<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:ssdev="http://www.bsoft.com.cn/schema/ssdev"
			xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.bsoft.com.cn/schema/ssdev
				http://www.bsoft.com.cn/schema/ssdev/ssdev.xsd">
	<ssdev:applicationDomain name="phis" registryAddress="zookeeper://111.229.217.35:2181" rpcServerWorkUrl="hessian://localhost:8080/phis/rpc/"/>
	<!-- role -->
	<bean id="roleController" class="ctd.account.role.RoleController">
		<property name="roleHome" value="roles"/>
	</bean>

	<bean id="roleWatcher" class="ctd.account.role.RoleWatcher" init-method="startWatch">
		<property name="controller" ref="roleController" />
	</bean>

	<ssdev:service ref="roleWatcher" subscribe="platform.roleUpdate" />
	<ssdev:service id="remoteRoleLoader" class="ctd.account.role.RoleRemoteLoader" />

	<!-- user -->
	<bean id="userController" class="ctd.account.user.UserController" />
	<bean id="userWatcher" class="ctd.account.user.UserWatcher" init-method="startWatch">
		<property name="controller" ref="userController" />
	</bean>

	<ssdev:service ref="userWatcher" subscribe="platform.userUpdate" />
	<ssdev:service id="remoteUserLoader" class="ctd.account.user.UserRemoteLoader" />

	<!-- organ -->
	<bean id="organController" class="ctd.account.organ.OrganController" />

	<bean id="organWatcher" class="ctd.account.organ.OrganWatcher" init-method="startWatch">
		<property name="controller" ref="organController" />
	</bean>

	<ssdev:service ref="organWatcher" subscribe="platform.organUpdate" />
	<ssdev:service id="remoteOrganLoader" class="ctd.account.organ.OrganRemoteLoader" />

	<!-- schema -->
	<bean id="schemaController" class="ctd.schema.SchemaController" />
	<bean id="schemaWatcher" class="ctd.schema.SchemaWatcher" init-method="startWatch">
		<property name="controller" ref="schemaController" />
	</bean>
	<ssdev:service ref="schemaWatcher" subscribe="platform.schemaUpdate" />
	<ssdev:service id="remoteSchemaLoader" class="ctd.schema.SchemaRemoteLoader" />
	<ssdev:service id="tableDicLoader" class="ctd.service.remote.TableDicLoaderImp" />
	<!-- dictionary -->
	<bean id="dictionaryController" class="ctd.dictionary.DictionaryController" />
	<bean id="dictionaryWatcher" class="ctd.dictionary.DictionaryWatcher" init-method="startWatch">
		<property name="controller" ref="dictionaryController" />
	</bean>
	<ssdev:service ref="dictionaryWatcher" subscribe="platform.dictionaryUpdate" />
	<ssdev:service id="remoteDictionaryLoader" class="ctd.dictionary.DictionaryRemoteLoader" />
	<!-- application -->
	<bean id="applicationController" class="ctd.app.ApplicationController" />
	<bean id="applicationWatcher" class="ctd.app.ApplicationWatcher" init-method="startWatch">
		<property name="controller" ref="applicationController" />
	</bean>
	<ssdev:service ref="applicationWatcher" subscribe="platform.applicationUpdate" />
	<ssdev:service id="remoteApplicationLoader" class="ctd.app.ApplicationRemoteLoader" />

	<!-- category -->
	<bean id="categoryNodeController" class="ctd.security.CategoryNodeController" />
	<bean id="categoryNodeWatcher" class="ctd.security.CategoryNodeWatcher" init-method="startWatch">
		<property name="controller" ref="categoryNodeController" />
	</bean>
	<ssdev:service ref="categoryNodeWatcher" subscribe="platform.categoryNodeUpdate" />
	<ssdev:service id="remoteCategoryNodeLoader" class="ctd.security.CategoryNodeRemoteLoader" />

	<ssdev:service id="resourceLocator" class="ctd.mvc.resource.service.ResourceLocateService" />
	<ssdev:service id="daoService" class="ctd.dao.support.HibernateSupportDAOService" />
	<ssdev:service id="serviceProxy" class="ctd.service.core.proxy.OriginalServiceProxy" />

	<ssdev:service id="personLoader" class="ctd.service.remote.PersonLoaderImpl"/>
	<ssdev:service id="officeLoader" class="ctd.service.remote.OfficeLoaderImpl"/>
	<ssdev:service id="organizationLoader" class="ctd.service.remote.OrganizationLoaderImpl"/>
	<bean id="userService" class="ctd.service.remote.UserLoaderImpl" >
		<property name="entryName" value="chis.sys.schemas.BASE_UserRoles" />
	</bean>
	<ssdev:service id="userLoader" ref="userService"/>
	<ssdev:service id="dictionaryLoader" class="ctd.service.remote.DictionaryLoaderImpl"/>
	<ssdev:service id="domainLoader" class="ctd.service.remote.DomainLoaderImpl"/>
	<ssdev:service id="monitorInfoRPCServiceImpl" class="ctd.monitor.service.remote.MonitorInfoRPCServiceImpl"/>

	<!--load and save domcument with postfix like .app .dic .org etc.  -->
	<ssdev:service id="xmlRemoteLoader" class="ctd.service.remote.XmlResourceLoaderImpl"/>

	<!-- query table data from remote -->
	<bean id="phis.userService" class="ctd.service.configure.UserConfig"/>
	<bean id="userPropService" class="ctd.service.configure.UserPropService"/>

	<!--检验开单  -->
	<bean id="commonPHISProvider" class="phis.application.lis.source.rpc.CommonPHISProvider">
		<property name="phisService" ref="phisService" />
	</bean>
	<ssdev:service id="phisProvider" ref="commonPHISProvider" />

</beans>
